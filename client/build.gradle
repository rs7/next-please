import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.Paths

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.gradlefx', name: 'gradlefx', version: '1.3.0'
    }
}

apply plugin: 'gradlefx'
apply plugin: 'ideafx'

repositories {
    maven {
        credentials {
            username bitbucketLogin
            password bitbucketPassword
        }
        url 'https://api.bitbucket.org/1.0/repositories/rs7/next-please-repo/rawKey/master/'
    }
}

configurations {
    playerglobal
}

ext {
    //После изменения версии может сломаться компиляция в IDEA. Удали/Добавь Apache Flex SDK в IDEA для решения проблемы.(https://youtrack.jetbrains.com/issue/IDEA-145396)
    swfVersion = '18.0'
}

dependencies {
    internal name: 'promise-as3', version: '1.0.0-SNAPSHOT', group: 'com.codecatalyst', ext: 'swc'
    internal name: 'robotlegs-framework', version: '2.2.1', group: 'robotlegs', ext: 'swc'
    playerglobal name: 'playerglobal', version: swfVersion, group: 'com.adobe.flex.framework', ext: 'swc'
}

flexHome = flexSDKPath
flexSdkName = Paths.get(flexSDKPath).fileName
frameworkLinkage = 'merged'
mainClass = 'rs7.nextPlease.Application'
output = 'next-please-gradle'
playerVersion = swfVersion
resourceDirs = []
srcDirs = ['/src']
testDirs = []
testResourceDirs = []
type = 'swf'

additionalCompilerOptions = [
  "-target-player=$swfVersion",
]

/*
Передача компилятору playerglobal.swc

Для чего:
Это сделано для возможности безболезненной смены swfVersion

Как это работает:

1. Ищем файл задания переменных окружения (env.properties) в директории Flex SDK.
2. Если он есть, считываем из него значение env.PLAYERGLOBAL_HOME
   Если его нет, то создаём с содержимым env.PLAYERGLOBAL_HOME=libs/player
3. Копируем файл playerglobal.swc из разрешённых зависимостей типа playerglobal в PLAYERGLOBAL_HOME/$swfVersion/playerglobal.swc
   Это соответствует шаблону ({playerglobalHome}/{targetPlayerMajorVersion}.{targetPlayerMinorVersion}/playerglobal.swc) заданному в стандартном конфигурационном файле компилятора (flex-config.xml) Flex SDK

Почему сделано именно так:
- Имя файла playerglobal.swc нельзя менять, иначе компилятор его не подхватывает
- Имя файла внутри локального gradle-репозитория изменить нельзя и оно отлично от оригинального (playerglobal.swc)
- Задать переменную окружения из gradle нельзя (PLAYERGLOBAL_HOME не исключение)
- Если не устанавливать переменную окружения PLAYERGLOBAL_HOME, компилятор не находит playerglobal.swc, даже если он расположен по стандартному пути libs/player (это касается Apache Flex SDK последних версий)
*/
task playerglobal << {

    def envFile = Paths.get(flexSDKPath).resolve('env.properties')

    Properties properties = new Properties()

    if (Files.exists(envFile)) {
        properties.load(Files.newInputStream(envFile))
    } else {
        envFile = Files.createFile(envFile)
    }

    def playerglobalHomeEnvKey = 'env.PLAYERGLOBAL_HOME'

    def playerglobalHome = properties.getProperty(playerglobalHomeEnvKey)

    if (!playerglobalHome) {

        playerglobalHome = 'libs/player'
        properties.setProperty(playerglobalHomeEnvKey, playerglobalHome)
        properties.store(Files.newOutputStream(envFile), 'gradle')

    }

    Path playerglobalHomePath = Paths.get(playerglobalHome)
    if (!playerglobalHomePath.isAbsolute()) {
        playerglobalHomePath = Paths.get(flexSDKPath).resolve('frameworks').resolve(playerglobalHomePath)
    }

    Files.createDirectories(playerglobalHomePath)

    configurations.playerglobal.resolvedConfiguration.resolvedArtifacts.each { artifact ->
        project.copy {
            from artifact.file
            into playerglobalHomePath.resolve(artifact.moduleVersion.id.version).toFile()
            rename { String fileName -> fileName = 'playerglobal.swc' }
        }
    }

}
